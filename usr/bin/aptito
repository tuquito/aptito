#!/usr/bin/python
# -*- coding: UTF-8 -*-

"""
 Aptito 1.3
 Copyright (C) 2010
 Author: Mario Colque <mario@tuquito.org.ar>
 Tuquito Team! - www.tuquito.org.ar

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; version 3 of the License.
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 GNU General Public License for more details.
 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
"""

import os, commands, sys, gettext, apt

# i18n
gettext.install('aptito', '/usr/share/tuquito/locale')

class Aptito:
    def __init__(self):
        os.chdir('/var/cache/apt/archives/')
        cache = apt.Cache()
        packagesList = []
        if sys.argv[1] == '-u':
            packages = sys.argv[2:]
            check = False
        else:
            packages = sys.argv[1:]
            check = True
        for package in packages:
            package = package.strip()
            self.setStatus(_('Checking availability of ') + self.color(package, 'WARNING') + '...')
            try:
                pkg = cache[package]
                if pkg.candidate.summary != '':
                    self.setStatus(_('Package found'))
                    if check:
                        if pkg.is_installed:
                            self.setStatus(_('Package already installed, skipping ') + self.color(package, 'WARNING') + '...', 'WARNING')
                        else:
                            packagesList.append(package)
                    else:
                        packagesList.append(package)
            except Exception, detail:
                self.setStatus(_('The package does not exist'), 'ERROR')
        if len(packagesList) > 0:
            packagesList = ' '.join(packagesList)
            self.setStatus(_('Downloading files...'))
            cmd = 'apt-get --print-uris -y install %s | egrep -o -e "(ht|f)tp://[^\']+"' % packagesList
            uris = commands.getoutput(cmd).split('\n')
            for uri in uris:
                if uri != '':
                    os.system('axel -a ' + uri)
            self.setStatus(_('Installing packages...'))
            cmd = 'apt-get -y --force-yes install ' + packagesList
            install = os.system(cmd)
            if install != 0:
                self.setStatus(_('Error during process...'), 'ERROR')
            else:
                self.setStatus(_('The packages were successfully installed'))
        else:
            self.setStatus(_('Finished. No files for download'))

    def color(self, data, level=None):
        codes = {\
            None:       (0,   0),
            'DEBUG':    (0,   2), # gris
            'INFO':     (0,   0), # normal
            'WARNING':  (1,  33), # amarillo
            'ERROR':    (1,  31), # rojo
            'OK':       (1,  32), # verde
            'CRITICAL': (1, 101), # negro, fondo rojo
        }
        return (chr(27)+'[%d;%dm') % codes[level] + data + (chr(27)+'[%d;%dm') % codes[None]

    def setStatus (self, data, level='OK'):
        if level == 'OK':
            status = ':)'
        if level == 'WARNING':
            status = ':|'
        if level == 'ERROR':
            status = ':('
        print '[' + self.color(status, level) + '] ' + data

if __name__ == '__main__':
    print 'Aptito 1.3\n'
    if not os.environ['USER'] == 'root':
        print _('ERROR: You need root permissions to run APTITO.\nTo do this, run the command: sudo aptito <package>')
        sys.exit(1)
    Aptito()
